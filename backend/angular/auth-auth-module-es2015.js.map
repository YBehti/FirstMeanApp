{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/sign-up/sign-up.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/sign-up/sign-up.component.css","./src/app/auth/sign-up/sign-up.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,++B;;;;;;;;;;;;ACAf;AAAe,4+B;;;;;;;;;;;;;;;;;;;;ACA0B;AACc;AACE;AACK;AAE9D,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAC;CAC7C,CAAC;AAWF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAG;AAApB,iBAAiB;IAT7B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GAEW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnBW;AACgB;AACK;AACf;AACoB;AACtB;AACa;AAgB1D,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IAdtB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,qEAAc;YACd,0EAAe;SAChB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,sEAAiB;YACjB,8EAAqB;YACrB,0DAAW;SAEZ;KACF,CAAC;GAEW,UAAU,CAAG;AAAH;;;;;;;;;;;;;ACtBvB;AAAe,+EAAgB,iBAAiB,KAAK,oBAAoB,mBAAmB,KAAK,mDAAmD,2Y;;;;;;;;;;;;;;;;;;ACAvF;AAEf;AAS9C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH3C,cAAS,GAAG,KAAK,CAAC;IAG6B,CAAC;IAEhD,QAAQ;QAEN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACnF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAK/D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;CAEH;;YA3BiC,yDAAW;;AAJhC,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,wNAAqC;;KAEtC,CAAC;GACW,cAAc,CA+B1B;AA/B0B;;;;;;;;;;;;;ACX3B;AAAe,+EAAgB,iBAAiB,KAAK,oBAAoB,mBAAmB,KAAK,mDAAmD,mZ;;;;;;;;;;;;;;;;;;ACAvF;AAEf;AAQ9C,IAAa,eAAe,GAA5B,MAAa,eAAe;IAI1B,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH3C,cAAS,GAAG,KAAK,CAAC;IAG6B,CAAC;IAEhD,QAAQ;QAEN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACnF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAErE,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;CAEF;;YAtBiC,yDAAW;;AAJhC,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,8NAAuC;;KAExC,CAAC;GACW,eAAe,CA0B3B;AA1B2B","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onLogin(loginForm)\\\" #loginForm = \\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        placeholder=\\\"Enter email\\\"\\n        ngModel\\n        #emailInput = \\\"ngModel\\\"\\n        email\\n        required\\n\\n      >\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        type=\\\"password\\\"\\n        matInput\\n        placeholder=\\\"Enter password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n        required\\n        #passwordInput=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter valid content</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"warn\\\"  type=\\\"submit\\\">Login</button>\\n  </form>\\n\\n\\n  </mat-card>\\n\\n\\n\\n\\n\\n\"","export default \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onSignUp(SignUpForm)\\\" #SignUpForm = \\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        placeholder=\\\"Enter email\\\"\\n        ngModel\\n        required\\n        email\\n        #emailInput = \\\"ngModel\\\"\\n\\n      >\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        type=\\\"password\\\"\\n        matInput\\n        placeholder=\\\"Enter password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n        required\\n        #passwordInput=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter valid content</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"warn\\\"  type=\\\"submit\\\">Sign Up</button>\\n  </form>\\n\\n\\n  </mat-card>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'signUp', component: SignUpComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignUpComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n\r\n  ]\r\n})\r\n\r\nexport class AuthModule {}\r\n","export default \"mat-form-field{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG5cclxubWF0LXNwaW5uZXJ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n      console.log(authStatus);\n\n    });\n  }\n\n  onLogin(form: NgForm) {\n    this.isLoading = true;\n    if (form.invalid) {\n      return;\n    }\n    this.authService.login(form.value.email, form.value.password);\n\n\n\n\n   }\n\n   ngOnDestroy() {\n     this.authStatusSub.unsubscribe();\n   }\n\n}\n","export default \"mat-form-field{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZHtcclxuICB3aWR0aDoxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n    });\n  }\n\n  onSignUp(form: NgForm) {\n    this.isLoading = true;\n    if (form.invalid) {\n      return;\n    }\n    this.authService.createUser(form.value.email, form.value.password);\n\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["src/app/auth/login/login.component.html","src/app/auth/sign-up/sign-up.component.html","src/app/auth/auth-routing.module.ts","src/app/auth/auth.module.ts","src/app/auth/login/login.component.css","src/app/auth/login/login.component.ts","src/app/auth/sign-up/sign-up.component.css","src/app/auth/sign-up/sign-up.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onLogin(loginForm)\\\" #loginForm = \\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        placeholder=\\\"Enter email\\\"\\n        ngModel\\n        #emailInput = \\\"ngModel\\\"\\n        email\\n        required\\n\\n      >\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        type=\\\"password\\\"\\n        matInput\\n        placeholder=\\\"Enter password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n        required\\n        #passwordInput=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter valid content</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"warn\\\"  type=\\\"submit\\\">Login</button>\\n  </form>\\n\\n\\n  </mat-card>\\n\\n\\n\\n\\n\\n\"","export default \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onSignUp(SignUpForm)\\\" #SignUpForm = \\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        placeholder=\\\"Enter email\\\"\\n        ngModel\\n        required\\n        email\\n        #emailInput = \\\"ngModel\\\"\\n\\n      >\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        type=\\\"password\\\"\\n        matInput\\n        placeholder=\\\"Enter password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n        required\\n        #passwordInput=\\\"ngModel\\\">\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter valid content</mat-error>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"warn\\\"  type=\\\"submit\\\">Sign Up</button>\\n  </form>\\n\\n\\n  </mat-card>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'signUp', component: SignUpComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignUpComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n\r\n  ]\r\n})\r\n\r\nexport class AuthModule {}\r\n","export default \"mat-form-field{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG5cclxubWF0LXNwaW5uZXJ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n      console.log(authStatus);\n\n    });\n  }\n\n  onLogin(form: NgForm) {\n    this.isLoading = true;\n    if (form.invalid) {\n      return;\n    }\n    this.authService.login(form.value.email, form.value.password);\n\n\n\n\n   }\n\n   ngOnDestroy() {\n     this.authStatusSub.unsubscribe();\n   }\n\n}\n","export default \"mat-form-field{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\nmat-spinner{\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZHtcclxuICB3aWR0aDoxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lcntcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n    });\n  }\n\n  onSignUp(form: NgForm) {\n    this.isLoading = true;\n    if (form.invalid) {\n      return;\n    }\n    this.authService.createUser(form.value.email, form.value.password);\n\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"auth-auth-module-es5.js"}